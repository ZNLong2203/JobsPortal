services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKAJS_NO_PARTITIONER_WARNING: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
    ports:
      - 29092:29092
      - 9092:9092
    depends_on:
      - zookeeper
      
  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=app

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=admin
  
  nextjs:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000"  
    environment:
      - NODE_ENV=production
    depends_on:
      - server
  
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "2222:2222"
    environment:
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=admin
      - KAFKA_CLIENT_ID=1
      - KAFKA_BROKER=kafka:9092
      - MONGO_URL=mongodb://admin:admin@mongodb:27017/app?authSource=admin
    depends_on:
      - mongodb
      - redis
      - kafka

  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"   
  #     - "443:443"  
  #   volumes:
  #     - ./client/nginx.conf:/etc/nginx/nginx.conf
  #     - ./certs:/etc/nginx/certs 
  #   depends_on:
  #     - nextjs
  #     - server

volumes:
  redis-data:
    driver: local
  mongodb-data:
    driver: local
